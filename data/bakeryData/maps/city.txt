:Input
height

:Tex2D
noise
smoothNoise

:Shader

float scale=20;
float2 UV=pos;

float2 scaledUV = UV * scale;
int2 cell = floor(scaledUV);


float2 offset = scaledUV - cell;

float2 randomUV = cell * float2(0.037, 0.119);
fixed4 random = tex2D(tex2D_noise, randomUV);


float dist=1000;

int i;
int j;

for (i = -1; i <= 0; i++) {
  for (j = -1; j <= 0; j++) {
    float2 cell_t = cell + float2(i, j);
    float2 offset_t = offset - float2(i, j);
    randomUV = cell_t.xy * float2(0.037, 0.119);
    random = tex2D(tex2D_noise, randomUV);
    #image = tex2D(imageTex, offset_t - random.xy);
    float f=pow(random.z,2)-pow(map_height.x,3)-.5;
    if (f>0 && map_height.x>.1){
    float2 offset_t2 = offset_t -(float2(0.5, 0.5) + (random.xy));
    float2 radius2 = dot(offset_t2, offset_t2)/f;
    #float2 offset_t2=offset_t - random.xy;
    #float radius2 = length(offset_t2);
    dist=min(dist,radius2);}
  }
}


float v=1.5-dist*14;
v=pow(v,1);
v=v+(tex2D(tex2D_smoothNoise,pos*100)-.5)*8;
v=max(0,v);
return float4(0,0,0,v);